(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{1177:function(e,t,a){"use strict";a.r(t);var v=a(1),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("clang-format 是一种代码格式化工具，可用于格式化(排版) C / C++ / Java / JavaScript / Objective-C / Protobuf / C# 的代码。它支持多种预设代码风格与自定义风格 (通过编写 "),a("code",[e._v(".clang-format")]),e._v(" 文件)。")]),e._v(" "),a("h2",{attrs:{id:"自定义格式化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义格式化"}},[e._v("#")]),e._v(" 自定义格式化")]),e._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("clang-format -style"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("格式名 -dump-config "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" .clang-format`\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("其中，格式名的取值可以为 "),a("code",[e._v("LLVM")]),e._v(", "),a("code",[e._v("Google")]),e._v(", "),a("code",[e._v("Chromium")]),e._v(", "),a("code",[e._v("Mozilla")]),e._v(", "),a("code",[e._v("Webkit")]),e._v(" 中的任一种，这会将对应格式预设写入 "),a("code",[e._v(".clang-format")]),e._v(" 文件。")]),e._v(" "),a("h2",{attrs:{id:"使用命令行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用命令行"}},[e._v("#")]),e._v(" 使用命令行")]),e._v(" "),a("h3",{attrs:{id:"格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式"}},[e._v("#")]),e._v(" 格式")]),e._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("clang-format "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"可用选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可用选项"}},[e._v("#")]),e._v(" 可用选项")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("--Werror")]),e._v(": 将格式化警告变为错误")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--Wno-error=unknown")]),e._v(": 未知的格式化选项仅产生警告。")]),e._v(" "),a("p",[e._v("这可以保持格式化启用，即使配置包含未知 (较新) 选项。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--assume-filename=<string>")]),e._v(": 覆盖用于确定语言的文件名。")]),e._v(" "),a("p",[e._v("通常在从 stdin 读取时，帮助 clang-fomat 获取文件名")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--dry-run")]),e._v(" 或 "),a("code",[e._v("-n")]),e._v(": 如果设置，实际上不进行格式更改")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--dump-config")]),e._v(": 将配置选项转储到标准输出并退出, 可以与 "),a("code",[e._v("--style")]),e._v(" 选项一起使用。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--fallback-style=<string>")]),e._v(": 设置回退的默认格式，通常在 clang-format 找不到配置文件时使用。")]),e._v(" "),a("p",[e._v("设置 "),a("code",[e._v("--fallback-style=none")]),e._v(" 可以在这种情况下跳过格式化")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--ferror-limit=<uint>")]),e._v(": 设置 clang-format 输出的最大错误数，超过将停止输出。")]),e._v(" "),a("p",[e._v("请仅与 "),a("code",[e._v("--dry-run")]),e._v(" 或 "),a("code",[e._v("-n")]),e._v(" 配合使用，"),a("code",[e._v("0")]),e._v(" 意味着无限制")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("-i")]),e._v(": 替换输入文件")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--length=<uint>")]),e._v(": 格式化指定长度范围")]),e._v(" "),a("p",[e._v("可以通过指定多个偏移和长度对来格式化几个范围。")]),e._v(" "),a("p",[e._v("当仅指定一个偏移量而没有 "),a("code",[e._v("--length")]),e._v("，clang-format 会一直格式化到文件的最后。")]),e._v(" "),a("p",[e._v("只能与一个输入文件一起使用。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--lines=<string>")]),e._v(": 格式为 "),a("code",[e._v("<start line>:<end line>")])]),e._v(" "),a("p",[e._v("设置格式化行的范围(起始为第一行)，可以通过指定多个范围来格式化多行。")]),e._v(" "),a("p",[e._v("不能与 "),a("code",[e._v("--offset")]),e._v(" 和 "),a("code",[e._v("--length")]),e._v(" 一起使用。")]),e._v(" "),a("p",[e._v("只能与一个输入文件一起使用。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--offset=<uint>")]),e._v(": 格式化从此字节偏移量开始的范围。")]),e._v(" "),a("p",[e._v("可以通过指定多个范围来格式化几个偏移量和长度对。")]),e._v(" "),a("p",[e._v("只能与一个输入文件一起使用。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--output-replacements-xml")]),e._v(": 输出 XML")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--sort-includes")]),e._v(": 如果设置，将覆盖包含排序行为。由 SortIncludes 样式标志确定")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--style=<string>")]),e._v(" 编码样式")]),e._v(" "),a("p",[e._v("当前支持: "),a("code",[e._v("LLVM")]),e._v(", "),a("code",[e._v("Google")]),e._v(", "),a("code",[e._v("Chromium")]),e._v(", "),a("code",[e._v("Mozilla")]),e._v(", "),a("code",[e._v("Webkit")])]),e._v(" "),a("p",[e._v("使用 "),a("code",[e._v("--style=file")]),e._v(" 从中文件加载样式配置")]),e._v(" "),a("p",[e._v("使用 "),a("code",[e._v('--style="{key:value,...}"')]),e._v(" 来设置特定的参数，\n例如: "),a("code",[e._v('"{BasedOnStyle: llvm, IndentWidth: 8}"')])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("--verbose")]),e._v(": 输出处理的文件列表")])])]),e._v(" "),a("h2",{attrs:{id:"vs-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vs-code"}},[e._v("#")]),e._v(" VS Code")]),e._v(" "),a("p",[e._v("在 VS Code 中安装 C/C++ 插件以启用两者支持时会自动安装 clang-format，因此无需进行任何操作，即可在 C/C++ 文件中对代码进行格式化。")]),e._v(" "),a("h2",{attrs:{id:"推荐样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#推荐样式"}},[e._v("#")]),e._v(" 推荐样式")]),e._v(" "),a("p",[e._v("Mr.Hope 推荐使用 Google 预设，所以在个人与工作室的每个项目中，都会使用 Google 编码风格。")]),e._v(" "),a("p",[e._v("建议在 VS Code 中配置默认格式风格:")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"C_Cpp.clang_format_fallbackStyle"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Google"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h2",{attrs:{id:"官方文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官方文档"}},[e._v("#")]),e._v(" 官方文档")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://clang.llvm.org/docs/ClangFormat.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("地址"),a("OutboundLink")],1),e._v(" (需 VPN)")])])])}),[],!1,null,null,null);t.default=_.exports}}]);